<?php

require_once 'CRM/Core/Page.php';

class CRM_Catchmandrillbounces_Page_CatchBounces extends CRM_Core_Page {
  function run() {
    // Example: Set the page-title dynamically; alternatively, declare a static title in xml/Menu/*.xml
    CRM_Utils_System::setTitle(ts('CatchBounces'));

    // Example: Assign a variable for use in a template
    $this->assign('currentTime', date('Y-m-d H:i:s'));

    parent::run();

      if (CRM_Utils_Array::value('mandrill_events', $_POST)) {
        $bounceType = array();
        $reponse = json_decode($_POST['mandrill_events'], TRUE);
        if (is_array($reponse)) {
          $events = array('hard_bounce','soft_bounce', 'spam', 'reject');
          foreach ($reponse as $value) {
            //changes done to check if email exists in response array
            if (in_array($value['event'], $events) && CRM_Utils_Array::value('email', $value['msg'])) {
            $message = $value['event']. "-- ";            
              foreach($value['msg'] as $key => $item){
                if (is_array($item)){
                  $item = implode(', ', $item);
                }
                $message .= $key. ": ". $item . ","; 
              }

              $params = array();
              $type = 'Catch Mandrill Bounces';
              switch ($value['event']){
              case 'hard_bounce':
              case'reject':

                $params = array('version' => '3', 'email' =>   $value['msg']['email']);
                $result = civicrm_api('email', 'get', $params);
                if (!$result['is_error']){
                  foreach ($result['values'] as $email){
                    $params = array('version' => '3', 'id' => $email['id'], 'email' => $email['email'], 'on_hold' => 1);    
                    $result = civicrm_api('email', 'create', $params);      
                  }   
                  $message .= '******email address put on hold for all contacts, ';       
                }
                else{
                  $message .= '******email address not found in CiviCRM: ' . $result['error_message'] . ', ';
                }

                break;       
              case 'spam':
                $params = array('version' => '3', 'email' =>   $value['msg']['email']);
                $result = civicrm_api('email', 'get', $params);
                if (!$result['is_error']){
                  foreach ($result['values'] as $email){
                    $params = array('version' => '3', 'id' => $email['contact_id'], 'is_opt_out' => 1);    
                    $result = civicrm_api('Contact', 'create', $params);      
                  }   
                  $message .= '******contact marked as NO BULK EMAILS, ';       
                }
                else{
                  $message .= '******email address not found in CiviCRM: ' . $result['error_message'] . ', ';
                }              
                break;                         
              }
              $message .= 'generated by Catch Mandrill Bounces in your civicrm extensions directory';
              watchdog($type, $message);
          }
         }
       }
    }
  }
 
}
